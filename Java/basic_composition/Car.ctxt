#BlueJ class context
comment0.params=aManufacturer\ aModel\ aYearOfRegistration\ aKerbWeight\ anEngine
comment0.target=Car(java.lang.String,\ java.lang.String,\ int,\ int,\ Engine)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Car.\ Requires\ arguments\ in\ the\ order,\r\n\ manufacturer,\ model,\ yearOfRegistration,\ kerbWeight,\ Engine.\r\n
comment1.params=anEngine
comment1.target=Car(Engine)
comment1.text=\r\n\ Constructor\ that\ takes\ an\ exiting\ engine\ object\ as\ argument,\ and\ uses\ defaults\ for\r\n\ other\ fields\r\n
comment10.params=
comment10.target=int\ getKerbWeight()
comment10.text=\r\n\ Getter\ method\ for\ kerbWeight\ variable\r\n
comment11.params=
comment11.target=java.lang.String\ powerWeightRatio()
comment11.text=\r\n\ Method\ to\ calculate\ the\ power\ to\ weight\ ratio\ of\ the\ car\ from\ the\ \r\n\ kerb\ weight\ and\ the\ peak\ power\ of\ the\ Engine.\ Sends\ a\ message\ to\ the\r\n\ Engine\ object\ to\ obtain\ the\ peak\ power.\ As\ the\ peak\ power\ is\ of\ type\ \r\n\ double\ the\ calculation\ automatically\ casts\ the\ kerb\ weight\ to\ a\ double\ \r\n\ so\ the\ value\ returned\ is\ also\ a\ double.\ If\ kerb\ weight\ is\ zero\ the\ \r\n\ calculation\ will\ return\ NaN\ as\ a\ number\ divided\ by\ zero\ is\ undefined.\ \r\n\ In\ this\ case\ the\ method\ returns\ an\ error.\ Rounding\ is\ done\ by\ casting\ \r\n\ to\ a\ string,\ and\ returning\ the\ first\ 5\ chars.\ This\ is\ sufficient\ accuracy\ \r\n\ for\ power\ to\ weight\ ratio\ in\ cars.\ Rounding\ is\ only\ done\ in\ the\ case\ that\ \r\n\ the\ calculated\ value\ is\ more\ than\ 5\ digits\ including\ the\ decimal\ point.\r\n
comment12.params=
comment12.target=java.lang.String\ getTaxPerYear()
comment12.text=\r\n\ Calculates\ the\ vehicle\ tax\ payable\ per\ annum\ on\ the\ Car,\ based\ on\ the\ \r\n\ engine\ capacity\ and\ the\ year\ of\ registration.\ Note\ this\ is\ not\ accurate,\ \r\n\ but\ an\ approximation\ to\ illustrate\ how\ such\ a\ feature\ may\ be\ implemented.\r\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\r\n\ Method\ to\ return\ the\ state\ of\ the\ object\ in\ a\ human\ readable\ form.\r\n
comment2.params=
comment2.target=Car()
comment2.text=\r\n\ Zero-argument\ constructor\ for\ objects\ of\ class\ Car.\ Uses\ default\ values\r\n\ for\ car,\ and\ call\ the\ zero-argument\ constructor\ for\ Class\ Engine.\r\n
comment3.params=aManufacturer
comment3.target=void\ setManufacturer(java.lang.String)
comment3.text=\r\n\ Setter\ method\ for\ manufacturer\ variable\r\n
comment4.params=
comment4.target=java.lang.String\ getManufacturer()
comment4.text=\r\n\ Getter\ method\ for\ manufacturer\ variable\r\n
comment5.params=aModel
comment5.target=void\ setmodel(java.lang.String)
comment5.text=\r\n\ Setter\ method\ for\ model\ variable\r\n
comment6.params=
comment6.target=java.lang.String\ getModel()
comment6.text=\r\n\ Getter\ method\ for\ model\ variable\r\n
comment7.params=aYearOfRegistration
comment7.target=void\ setYearOfRegistration(int)
comment7.text=\r\n\ Setter\ method\ for\ yearOfRegistration\ variable\r\n
comment8.params=
comment8.target=int\ getYearOfRegistration()
comment8.text=\r\n\ Getter\ method\ for\ yearOfRegistration\ variable\r\n
comment9.params=aKerbWeight
comment9.target=void\ setKerbWeight(int)
comment9.text=\r\n\ Setter\ method\ for\ kerbWeight\ variable\r\n
numComments=14
